rule filter_haplotype_based_fetal_SNP:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/effect_origin/raw_data/{CCHMC_cohort}.gday.hap.gwas.result.csv'
        output:
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h1_{CCHMC_cohort}.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h2_{CCHMC_cohort}.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h3_{CCHMC_cohort}.txt'
        script:
                'format_CCHMC_haplotype.py'

rule format_MobaGenetics_haplotype_fetal_SNP:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/effect_origin/raw_data/fetal_SNP/MoBaGenetics.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h1_MoBaGenetics.txt',
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h2_MoBaGenetics.txt',
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h3_MoBaGenetics.txt'
	run:
		d= pd.read_csv(input[0], sep= ' ', header= 0)
		d['CHR']= 2
		d['POS']= 113521754
		d['REF']= 'C'
		d['EFF']= 'T'
                h1= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h1', 'se_h1', 'pvalue_h1']]
                h1.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
                h2= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h2', 'se_h2', 'pvalue_h2']]
                h2.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
                h3= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h3', 'se_h3', 'pvalue_h3']]
                h3.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
                h1= add_ID(h1)
                h2= add_ID(h2)
                h3= add_ID(h3)
                h1.to_csv(output[0], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])
                h2.to_csv(output[1], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])
                h3.to_csv(output[2], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])

rule format_HUNT_haplotype_fetal_SNP:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/effect_origin/raw_data/fetal_SNP/HUNT.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h1_HUNT.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h2_HUNT.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/h3_HUNT.txt'
        run:
                d= pd.read_csv(input[0], sep= ' ', header= 0)
                d[['CHR', 'POS', 'REF', 'EFF']]= d.snp.str.split(':', expand= True)
                h1= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h1', 'se_h1', 'pvalue_h1']]
                h1.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
                h2= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h2', 'se_h2', 'pvalue_h2']]
                h2.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
		h3= d.loc[:, ['CHR', 'POS', 'EFF', 'REF', 'beta_h3', 'se_h3', 'pvalue_h3']]
		h3.columns= ['CHR', 'POS', 'EFF', 'REF', 'BETA', 'SE', 'pvalue']
		h1= add_ID(h1)
                h2= add_ID(h2)
                h3= add_ID(h3)
                h1.to_csv(output[0], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])
                h2.to_csv(output[1], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])
                h3.to_csv(output[2], sep= '\t', header= True, index= False, columns= ['ID', 'CHR', 'POS', 'REF', 'EFF', 'BETA', 'SE', 'pvalue'])

rule meta_haplotype_fetal_SNP:
        ''
        input:
                'scripts/fetal_SNP/metal_script_{haplotype}',
                expand('/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/{{haplotype}}_{CCHMC_cohort}.txt', CCHMC_cohort= CCHMC_cohort_nms),
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/{haplotype}_MoBaGenetics.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/processed_data/{haplotype}_HUNT.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/meta_{haplotype}_1.txt',
                '/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/meta_{haplotype}.log'
        shell:
                '/home/pol/software/generic-metal/metal {input[0]} >> {output[1]}'

rule table_fetal_SNP:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/meta_h1_1.txt',
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/meta_h2_1.txt',
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/meta_h3_1.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/fetal_SNP/META/all_cohort.txt'
	run:
		h1= pd.read_csv(input[0], sep= '\t', header= 0, usecols= ['MarkerName', 'Allele1', 'Allele2', 'Effect', 'StdErr', 'P-value'])
		h1.columns= ['ID', 'EFF', 'REF', 'beta_MT', 'se_MT', 'pvalue_MT']
		h1['beta_MT']= np.where(h1.REF > h1.EFF, -1 * h1.beta_MT, h1.beta_MT)
		h2= pd.read_csv(input[1], sep= '\t', header= 0, usecols= ['MarkerName', 'Allele1', 'Allele2', 'Effect', 'StdErr', 'P-value'])
                h2.columns= ['ID', 'EFF', 'REF', 'beta_MNT', 'se_MNT', 'pvalue_MNT']
		h2['beta_MNT']= np.where(h2.REF > h2.EFF, -1 * h2.beta_MNT, h2.beta_MNT)
		h3= pd.read_csv(input[2], sep= '\t', header= 0, usecols= ['MarkerName', 'Allele1', 'Allele2', 'Effect', 'StdErr', 'P-value'])
                h3.columns= ['ID', 'EFF', 'REF', 'beta_PT', 'se_PT', 'pvalue_PT']
		h3['beta_PT']= np.where(h3.REF > h3.EFF, -1 * h3.beta_PT, h3.beta_PT)
		h= pd.merge(h1, h2, on= ['ID', 'REF', 'EFF'], how= 'inner')
		h= pd.merge(h, h3, on= ['ID', 'REF', 'EFF'], how= 'inner')
		h['REF'], h['EFF']= np.where(h.REF> h.EFF, [h.EFF, h.REF], [h.REF, h.EFF])
		h.to_csv(output[0], sep= '\t', header= True, index= False)
