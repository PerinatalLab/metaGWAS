
repr_pheno_nms= ['miscarriage', 'GA_fetal', 'BW_maternal', 'AFB', 'AMenarche', 'AMenopause', 'NLB', 'Testosterone_fem', 'SHBG_fem', 'Oestradiol_fem', 'POP', 'Testosterone_male', 'PCOS', 'endometriosis', 'BW_fetal', 'BW_maternal_effect', 'BW_fetal_effect', 'leiomyoma_uterus', 'Preeclampsia', 'CBAT_fem', 'CBAT_male', 'SHBG_male']


rule sample_HRC_sites:
	''
	input:
		'/mnt/hdd/data/geno/references/HRC.r1-1.GRCh37.wgs.mac5.sites.tab'
	output:
		'/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
	run:
		d= pd.read_csv(input[0], sep= '\t', header= 0, usecols= ['#CHROM', 'POS', 'REF', 'ALT', 'AF_EXCLUDING_1000G'])
		d.columns= ['CHR', 'POS', 'oa', 'ea', 'eaf']
		d= d.loc[((d.eaf> 0.05) & (d.eaf<0.95)), :]
		d['eaf']= np.where(d.oa> d.ea, 1 - d.eaf, d.eaf)
		d= d.sample(n= 1000000)
		d.to_csv(output[0], sep= '\t', header= True, index= False)

rule report_file_level_QC_allptd:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/sumstats/allPTD/{allPTD_coh}_temp.txt',
		'/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/QC/allPTD/file_lvl_{allPTD_coh}_allPTD.html'
	threads: 1
	script:
		'file_level_qc.Rmd'

rule report_file_level_QC_postTerm:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/postTerm/{postTerm_coh}_temp.txt',
		'/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/postTerm/file_lvl_{postTerm_coh}_postTerm.html'
        threads: 1
	script:
                'file_level_qc.Rmd'

rule report_file_level_QC_GAraw:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/GAraw/{GAraw_coh}_temp.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAraw/file_lvl_{GAraw_coh}_GAraw.html'
        threads: 1
	script:
                'file_level_qc.Rmd'

rule report_file_level_QC_GAnrm:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/GAnrm/{GAnrm_coh}_temp.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAnrm/file_lvl_{GAnrm_coh}_GAnrm.html'
        threads: 1
	script:
                'file_level_qc.Rmd'

rule report_allfiles_QC_allptd:
	''
	input:
		'/mnt/hdd/data/geno/references/HRC.r1-1.GRCh37.wgs.mac5.sites.tab',
		expand('/mnt/hdd/common/pol/metaGWAS/sumstats/allPTD/{allPTD_coh}_allPTD.txt', allPTD_coh= allPTD_coh_nms)
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/QC/allPTD/allfiles_allPTD.html'
	script:
		'all_files_QC.Rmd'

rule report_allfiles_QC_postTerm:
        ''
        input:
                '/mnt/hdd/data/geno/references/HRC.r1-1.GRCh37.wgs.mac5.sites.tab',
                expand('/mnt/hdd/common/pol/metaGWAS/sumstats/postTerm/{postTerm_coh}_postTerm.txt', postTerm_coh= postTerm_coh_nms)
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/postTerm/allfiles_postTerm.html'
        script:
                'all_files_QC.Rmd'


rule report_allfiles_QC_GAraw:
	''
	input:
		'/mnt/hdd/data/geno/references/HRC.r1-1.GRCh37.wgs.mac5.sites.tab',
                expand('/mnt/hdd/common/pol/metaGWAS/sumstats/GAraw/{GAraw_coh}_GAraw.txt', GAraw_coh= GAraw_coh_nms)
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/QC/GAraw/allfiles_GAraw.html'
	script:
		'all_files_QC.Rmd'


rule report_allfiles_QC_GAnrm:
        ''
        input:
                '/mnt/hdd/data/geno/references/HRC.r1-1.GRCh37.wgs.mac5.sites.tab',
                expand('/mnt/hdd/common/pol/metaGWAS/sumstats/GAnrm/{GAnrm_coh}_GAnrm.txt', GAnrm_coh= GAnrm_coh_nms)
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAnrm/allfiles_GAnrm.html'
        script:
                'all_files_QC.Rmd'

rule report_meta_QC:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/Maternal_GWAMA_{pheno}.txt.gz',
		'/mnt/hdd/common/pol/metaGWAS/LDscore/{pheno}_rg.log',
		'/mnt/hdd/common/pol/metaGWAS/LDscore/{pheno}_temp',
		'/mnt/hdd/common/pol/metaGWAS/locuszoom/plot_{pheno}.pdf',
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/meta_{pheno}_1.txt',
		'/mnt/hdd/common/pol/metaGWAS/independent_signals/GAraw/indep.clumped'
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/QC/{pheno}/meta_QC_{pheno}.pdf'
	threads: 6
	script:
		'meta_qc.Rmd'


rule format_reproductive_traits_coloc:
	'Format file for easy plotting.'
	input:
		'/mnt/hdd/common/pol/metaGWAS/colocalization/{pheno}/results_{repr_pheno}.txt',
		'/mnt/hdd/common/pol/metaGWAS/colocalization/{pheno}/pph_{repr_pheno}.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/coloc/temp/{pheno}/pph_{repr_pheno}.txt',
		'/mnt/hdd/common/pol/metaGWAS/reports/coloc/temp/{pheno}/results_{repr_pheno}.txt'
	run:
		df= pd.read_csv(input[0], sep= '\t', header= 0)
		df.sort_values('SNP.PP.H4', ascending= False, inplace= True)
		d= df.groupby('locus').head(1).reset_index()
		df['trait']= input[1].split('pph_')[1].replace('.txt', '')
		d['direction']= np.where((d['z.df1'] > 0) & (d['z.df2'] > 0), 'Positive', np.where((d['z.df1'] < 0) & (d['z.df2'] < 0), 'Negative', 'Opposite'))
		x= pd.read_csv(input[1], sep= '\t', header= 0)
		x['trait']= input[1].split('pph_')[1].replace('.txt', '')
		x= pd.merge(x, d[['snp', 'locus', 'SNP.PP.H4', 'direction']])
		x= x.loc[(x['PP.H0.abf'] != 0) & (x['PP.H1.abf'] != 0) & (x['PP.H2.abf'] != 0) & (x['PP.H0.abf'] != 0) & (x['PP.H4.abf'] != 0), :]
		x.dropna(axis= 0, inplace= True)
		x.to_csv(output[0], sep= '\t', header= True, index= False)
		df.to_csv(output[1], sep= '\t', header= True, index= False)

rule report_coloc_reproductive_traits:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/repr_phenos/LDSC/results/{pheno}_rg_temp',
		expand('/mnt/hdd/common/pol/metaGWAS/reports/coloc/temp/{{pheno}}/pph_{repr_pheno}.txt', repr_pheno= repr_pheno_nms),
		expand('/mnt/hdd/common/pol/metaGWAS/reports/coloc/temp/{{pheno}}/results_{repr_pheno}.txt', repr_pheno= repr_pheno_nms)
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/coloc/{pheno}_reproductive_traits.pdf'
	script:
		'coloc.Rmd'

rule top_genetic_variants:
	'Obtain a list of top genetic variant ID.'
	input:
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/Maternal_GWAMA_{pheno}.txt.gz',
		'/mnt/hdd/common/pol/metaGWAS/topregions/final/{pheno}.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/forest/topIDs/{pheno}.txt'
	run:
		d= pd.read_csv(input[0], sep= '\t', header= 0, compression= 'gzip')
		df= pd.read_csv(input[1], sep= '\t', header= 0)
		df['CHR']= np.where(df.CHR== 'X', '23', df.CHR)
		df['CHR']= df.CHR.astype(str).astype(int)
		d= pd.merge(d, df, on= 'CHR')
		d= d.loc[((d.POS> d.pos1) & (d.POS < d.pos2)), :]
		d.sort_values('pvalue', ascending= True, inplace= True)
		d= d.groupby('nearestGene_y').first()
		d.to_csv(output[0], sep= '\t', header= False, index= False, columns= ['ID']) 

rule grep_top_variants_GAraw:
	'Obtain the individual cohort-level betas for the top genetic variant.'
	input:
		'/mnt/hdd/common/pol/metaGWAS/reports/forest/topIDs/GAraw.txt',
		'/mnt/hdd/common/pol/metaGWAS/sumstats/GAraw/{GAraw_coh}_GAraw.txt'
	output:
		temp('/mnt/hdd/common/pol/metaGWAS/reports/forest/GAraw/temp/{GAraw_coh}_topvariants.txt')
	shell:
                '''
                grep -f {input[0]} {input[1]} > {output[0]} || true
                touch {output[0]}
                '''

rule grep_top_variants_GAnrm:
        'Obtain the individual cohort-level betas for the top genetic variant.'
        input:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/topIDs/GAnrm.txt',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/GAnrm/{GAnrm_coh}_GAnrm.txt'
        output:
                temp('/mnt/hdd/common/pol/metaGWAS/reports/forest/GAnrm/temp/{GAnrm_coh}_topvariants.txt')
        shell:
                '''
                grep -f {input[0]} {input[1]} > {output[0]} || true
                touch {output[0]}
                '''

rule grep_top_variants_allPTD:
        'Obtain the individual cohort-level betas for the top genetic variant.'
        input:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/topIDs/allPTD.txt',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/allPTD/{allPTD_coh}_allPTD.txt'
        output:
                temp('/mnt/hdd/common/pol/metaGWAS/reports/forest/allPTD/temp/{allPTD_coh}_topvariants.txt')
        shell:
                '''
                grep -f {input[0]} {input[1]} > {output[0]} || true
                touch {output[0]}
                '''
rule grep_top_variants_postTerm:
        'Obtain the individual cohort-level betas for the top genetic variant.'
        input:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/topIDs/postTerm.txt',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/postTerm/{postTerm_coh}_postTerm.txt'
        output:
                temp('/mnt/hdd/common/pol/metaGWAS/reports/forest/postTerm/temp/{postTerm_coh}_topvariants.txt')
        shell:
                '''
		grep -f {input[0]} {input[1]} > {output[0]} || true
		touch {output[0]}
		'''


rule add_cohort_concat_GAraw:
	'Concat top genetic variants from all cohorts.'
	input:
		expand('/mnt/hdd/common/pol/metaGWAS/reports/forest/GAraw/temp/{GAraw_coh}_topvariants.txt', GAraw_coh= GAraw_coh_nms)
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/forest/data/top_variants_GAraw.txt'
	run:
		df_list= list()
		for infile in input:
			d= pd.read_csv(infile, sep= '\t', header= None, names= ['SNP', 'CHR', 'POS', 'EAF', 'N', 'REF', 'EFF', 'BETA', 'SE', 'pvalue', 'STRAND', 'maf'])
			d['cohort']= infile.split('temp/')[1].replace('_topvariants.txt', '')
			df_list.append(d)
		d= pd.concat(df_list)
		d.to_csv(output[0], sep= '\t', header= True, index= False)

rule add_cohort_concat_GAnrm:
        'Concat top genetic variants from all cohorts.'
        input:
                expand('/mnt/hdd/common/pol/metaGWAS/reports/forest/GAnrm/temp/{GAnrm_coh}_topvariants.txt', GAnrm_coh= GAnrm_coh_nms)
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/data/top_variants_GAnrm.txt'
        run:
                df_list= list()
                for infile in input:
                        d= pd.read_csv(infile, sep= '\t', header= None, names= ['SNP', 'CHR', 'POS', 'EAF', 'N', 'REF', 'EFF', 'BETA', 'SE', 'pvalue', 'STRAND', 'maf'])
                        d['cohort']= infile.split('temp/')[1].replace('_topvariants.txt', '')
                        df_list.append(d)
                d= pd.concat(df_list)
                d.to_csv(output[0], sep= '\t', header= True, index= False)

rule add_cohort_concat_allPTD:
        'Concat top genetic variants from all cohorts.'
        input:
                expand('/mnt/hdd/common/pol/metaGWAS/reports/forest/allPTD/temp/{allPTD_coh}_topvariants.txt', allPTD_coh= allPTD_coh_nms)
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/data/top_variants_allPTD.txt'
        run:
                df_list= list()
                for infile in input:
                        d= pd.read_csv(infile, sep= '\t', header= None, names= ['SNP', 'CHR', 'POS', 'EAF', 'N', 'REF', 'EFF', 'BETA', 'SE', 'pvalue', 'STRAND', 'maf'])
                        d['cohort']= infile.split('temp/')[1].replace('_topvariants.txt', '')
                        df_list.append(d)
                d= pd.concat(df_list)
                d.to_csv(output[0], sep= '\t', header= True, index= False)

rule add_cohort_concat_postTerm:
        'Concat top genetic variants from all cohorts.'
        input:
                expand('/mnt/hdd/common/pol/metaGWAS/reports/forest/postTerm/temp/{postTerm_coh}_topvariants.txt', postTerm_coh= postTerm_coh_nms)
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/forest/data/top_variants_postTerm.txt'
        run:
                df_list= list()
                for infile in input:
                        d= pd.read_csv(infile, sep= '\t', header= None, names= ['SNP', 'CHR', 'POS', 'EAF', 'N', 'REF', 'EFF', 'BETA', 'SE', 'pvalue', 'STRAND', 'maf'])
                        d['cohort']= infile.split('temp/')[1].replace('_topvariants.txt', '')
			df_list.append(d)
                d= pd.concat(df_list)
                d.to_csv(output[0], sep= '\t', header= True, index= False)

rule report_forest_plots:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/reports/forest/data/top_variants_{pheno}.txt',
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/meta_{pheno}_1.txt',
		'/mnt/hdd/common/pol/metaGWAS/topregions/final/{pheno}.txt'
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/forest/reports/forest_plot_{pheno}.pdf'
	script:
		'forest_plots.Rmd'

rule report_other_meta_NOMOBA_GAraw:
	''
	input:
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NOMOBA/noMOBA_Maternal_GAraw.txt.gz',
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NOMOBA/meta_GAraw_1.txt',
		'/mnt/hdd/common/pol/metaGWAS/sumstats/META/Maternal_GWAMA_GAraw.txt.gz',
	output:
		'/mnt/hdd/common/pol/metaGWAS/reports/other_meta/noMOBA_GAraw.pdf'
	script:
		'other_meta.Rmd'

rule report_other_meta_NOMOBA_allPTD:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NOMOBA/noMOBA_Maternal_allPTD.txt.gz',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NOMOBA/meta_allPTD_1.txt',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/Maternal_GWAMA_allPTD.txt.gz',
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/other_meta/noMOBA_allPTD.pdf'
        script:
                'other_meta.Rmd'


rule report_other_meta_NO23andme_GAraw:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NO23andme/no23andme_Maternal_GAraw.txt.gz',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/other_meta/NO23andme/meta_GAraw_1.txt',
                '/mnt/hdd/common/pol/metaGWAS/sumstats/META/Maternal_GWAMA_GAraw.txt.gz',
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/other_meta/no23andme_Garaw.pdf'
        script:
                'other_meta.Rmd'

rule report_nonadditive:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/nonadditive/META/Maternal_GWAMA_GAraw_{model}.txt.gz',
		'/mnt/hdd/common/pol/metaGWAS/topregions/final/GAraw.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAraw/meta_QC_{model}.pdf'
        threads: 6
        script:
                'nonadditive_qc.Rmd'

rule report_file_level_QC_allptd_filter:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/allPTD/filtered/{allPTD_coh}.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/allPTD/filtered/file_lvl_{allPTD_coh}_allPTD.html'
        threads: 1
        script:
                'file_level_qc.Rmd'

rule report_file_level_QC_postTerm_filter:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/postTerm/filtered/{postTerm_coh}.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/postTerm/filtered/file_lvl_{postTerm_coh}_postTerm.html'
        threads: 1
        script:
                'file_level_qc.Rmd'

rule report_file_level_QC_GAraw_filter:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/GAraw/filtered/{GAraw_coh}.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAraw/filtered/file_lvl_{GAraw_coh}_GAraw.html'
        threads: 1
        script:
                'file_level_qc.Rmd'

rule report_file_level_QC_GAnrm_filter:
        ''
        input:
                '/mnt/hdd/common/pol/metaGWAS/sumstats/GAnrm/filtered/{GAnrm_coh}.txt',
                '/mnt/hdd/common/pol/metaGWAS/references/HRC_filtered.txt'
        output:
                '/mnt/hdd/common/pol/metaGWAS/reports/QC/GAnrm/filtered/file_lvl_{GAnrm_coh}_GAnrm.html'
        threads: 1
        script:
                'file_level_qc.Rmd'

